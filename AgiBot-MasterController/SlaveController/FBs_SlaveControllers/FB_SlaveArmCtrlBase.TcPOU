<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SlaveArmCtrlBase" Id="{dee0ec68-3abc-4720-b67c-0fb3fd57933b}" SpecialFunc="None">
    <Declaration><![CDATA[// Slave Arm Base Controller, Hold at Current Posture
FUNCTION_BLOCK FB_SlaveArmCtrlBase IMPLEMENTS I_SlaveArmCtrl
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// flag if the controller has finished all its jobs
	m_isFinished:BOOL:=FALSE;
	
	// controller execute time period
	m_timePeriod :LREAL:=0;
	
	// arm control data
	m_cmdJntPos : VEC8d;
	m_cmdJntVel : VEC8d;
	m_cmdJntAcc : VEC8d;
	m_cmdJntTrq : VEC8d;
	m_jntOPMode : Vec8i;
	m_jntEnableFlag :Vec8i;
	m_cmdCartPose : ST_Frame;
	m_cmdCartTwist : Vec6d;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{98ab3239-d030-4534-a55d-1eaac78d6af0}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_INPUT
	motionScale :LREAL;
	masterIdx :INT;
END_VAR

VAR_IN_OUT CONSTANT
	i_slaveArm :FB_SlaveArm;
	i_masterStatus :ST_MasterStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntTrq" Id="{31ee0fe6-80c4-42e7-bd18-5b745e895642}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntTrq : BOOL
VAR_INPUT
	motionScale :LREAL;
	masterIdx :INT;
END_VAR

VAR_IN_OUT CONSTANT
	i_slaveArm :FB_SlaveArm;
	i_masterStatus :ST_MasterStatus;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// set joint torque to zero in default
m_cmdJntTrq := g_zeroVec8d;]]></ST>
      </Implementation>
    </Method>
    <Method Name="checkToHoldLastCmds" Id="{90f04ad1-6a41-4802-98b4-abd6341aeded}">
      <Declaration><![CDATA[METHOD checkToHoldLastCmds : BOOL
VAR_IN_OUT CONSTANT
	i_slaveArm :FB_SlaveArm;
	i_slaveArmCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR
VAR
	j:INT;
	maxJntErr:LREAL;
	jntCtrlErr:Vec7d;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// check if to hold the command joint position unchanged
vecSub(i_slaveArmCtrlCmd.m_cmdJntPos, i_slaveArm.m_curJntPos,jntCtrlErr);
maxJntErr:=0.0;
FOR j:=1 TO g_sJntNum DO
	maxJntErr:= MAX(maxJntErr, ABS(jntCtrlErr[j]));
END_FOR

IF maxJntErr<GVL_SlaveControlParameters.g_jntCtrlErrForCmdHold THEN
	m_cmdJntPos:=i_slaveArmCtrlCmd.m_cmdJntPos;
ELSE
	m_cmdJntPos:=i_slaveArm.curJntPos;
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{63e02c69-11c3-4e06-9c58-dcaf1b3a881b}">
      <Declaration><![CDATA[// override this function in each exact controller
// NOTICE: set joint control mode here, and do some initialization if needed
METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_slaveArm	:FB_SlaveArm;
END_VAR
VAR_IN_OUT 
	r_slaveArmCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_timePeriod:=0;
m_jntEnableFlag :=g_onesVec8i;
m_jntEnableFlag[8]:=0; // L5 joint on instrument power box is unused currently 
m_jntOPMode:=g_slaveAllPosMode;
m_cmdCartPose:=i_slaveArm.curCartPose;
m_cmdCartTwist:=g_zeroVec6d;
m_cmdJntPos:=i_slaveArm.curJntPos;
m_cmdJntVel:=g_zeroVec8d;
m_cmdJntAcc:=g_zeroVec8d;
m_cmdJntTrq:=g_zeroVec8d;

// update commands to arm
r_slaveArmCtrlCmd.m_jntEnableFlag :=m_jntEnableFlag;
r_slaveArmCtrlCmd.m_cmdCartPose:=m_cmdCartPose;
r_slaveArmCtrlCmd.m_cmdCartTwist:=m_cmdCartTwist;
r_slaveArmCtrlCmd.m_cmdJntPos:=m_cmdJntPos;
r_slaveArmCtrlCmd.m_cmdJntVel:=m_cmdJntVel;
r_slaveArmCtrlCmd.m_cmdJntAcc:=m_cmdJntAcc;
r_slaveArmCtrlCmd.m_cmdJntTrq:=m_cmdJntTrq;
r_slaveArmCtrlCmd.m_jntOPMode:=m_jntOPMode;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="isFinished" Id="{d6db4485-2c6d-406e-9b85-5a477e39dd21}">
      <Declaration><![CDATA[PROPERTY isFinished : BOOL]]></Declaration>
      <Get Name="Get" Id="{438b47e5-c18c-4fc8-a8d2-2d2ca67eaf31}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[isFinished:=m_isFinished;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="reset" Id="{ac9e4b6b-f016-4e25-9efd-13892d3b6c48}">
      <Declaration><![CDATA[{warning '添加方法实现'}
METHOD reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_isFinished:=FALSE;
m_timePeriod:=0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="run" Id="{4a86d5bc-6efe-47db-8e4e-968f76a73eb3}">
      <Declaration><![CDATA[{warning '添加方法实现'}
METHOD run : BOOL
VAR_INPUT
	motionScale :LREAL;
	masterIdx :INT;
END_VAR

VAR_IN_OUT CONSTANT
	i_slaveArm :FB_SlaveArm;
	i_masterStatus :ST_MasterStatus;
END_VAR
VAR_IN_OUT
	r_slaveArmCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR
VAR
	i:INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF m_isFinished THEN
	RETURN;
END_IF

// check if arm enabled
IF FALSE = i_slaveArm.isEnabled(m_jntEnableFlag) THEN
//	RETURN;
END_IF

// calculate command joint position--Motion control
calcCmdJntPos(motionScale, masterIdx, i_slaveArm,i_masterStatus);

// calculate command joint torque -- Force control
calcCmdJntTrq(motionScale, masterIdx, i_slaveArm,i_masterStatus);

// update commands to arm
r_slaveArmCtrlCmd.m_jntEnableFlag :=m_jntEnableFlag;
r_slaveArmCtrlCmd.m_cmdCartPose:=m_cmdCartPose;
r_slaveArmCtrlCmd.m_cmdCartTwist:=m_cmdCartTwist;
r_slaveArmCtrlCmd.m_cmdJntPos:=m_cmdJntPos;
r_slaveArmCtrlCmd.m_cmdJntVel:=m_cmdJntVel;
r_slaveArmCtrlCmd.m_cmdJntAcc:=m_cmdJntAcc;
r_slaveArmCtrlCmd.m_cmdJntTrq:=m_cmdJntTrq;
r_slaveArmCtrlCmd.m_jntOPMode:=m_jntOPMode;

// update time period
m_timePeriod := m_timePeriod+g_slaveArmCtrlCycleTime;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SlaveArmCtrlBase">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.calcCmdJntPos">
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.calcCmdJntTrq">
      <LineId Id="5" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.checkToHoldLastCmds">
      <LineId Id="6" Count="6" />
      <LineId Id="26" Count="3" />
      <LineId Id="17" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.init">
      <LineId Id="49" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="71" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="86" Count="8" />
      <LineId Id="83" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.isFinished.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.reset">
      <LineId Id="7" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_SlaveArmCtrlBase.run">
      <LineId Id="138" Count="3" />
      <LineId Id="86" Count="0" />
      <LineId Id="88" Count="2" />
      <LineId Id="46" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="17" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="91" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>