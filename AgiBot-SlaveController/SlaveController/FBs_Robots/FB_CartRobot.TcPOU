<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_CartRobot" Id="{1219119a-c34a-4efb-a0e2-076d2e563cc0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CartRobot
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR

	m_slaveCart: FB_SlaveCart;		
	
	// input arm button 
	m_carHandChassisDriveUnlock AT%I* :ARRAY [1..2] OF BOOL;
	
	//open laser io
	m_openHorizonLaser AT  %Q* :DINT;
	m_openCrossLaser AT  %Q* :DINT;

	m_joystickData:Vec8d;

	// all cart controller instance 
	m_cartCtrlFactory :ARRAY[1..CartJointState_totalNum] OF I_CartJointCtrl;
	
	m_cartState:E_CartJointState:=CartJointState_Init;
	m_lastCartState:E_CartJointState:=CartJointState_Init;
	m_nextCartState:E_CartJointState:=CartJointState_Init;
	
	// flag if cart joint self-check passed
	m_selfCheckPass:  BOOL :=FALSE;
	
	// all cart controller instance 
	m_cartError :FB_CartCtrlError;
	m_cartInit :FB_CartCtrlInit;
	m_cartReady :FB_CartCtrlReady;
	m_cartInSurgery :FB_CartCtrlInSurgery;
	m_cartMotionCar :FB_CartCtrlMotionCar;
	m_cartAsepticDeploy :FB_CartCtrlAsepticDeploy;
	m_cartAdjust :FB_CartCtrlAdjust;
	m_cartRotaOverhang :FB_CartCtrlRotaOverhang;
	m_cartSlowStop : FB_CartCtrlSlowDown;
	
	// cart controller interface
	m_cartCtrl : I_CartJointCtrl;
	m_cartCtrlCmds : ST_SlaveArmCtrlCmds;
	
	//state machine flow jump condition allowed
	m_hangAdjustAllowed : BOOL;
	m_asepticDeploymentAllowed :BOOL;
	m_cartMoveAllowed :BOOL;
	m_rotaOverhangAllowed :BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="getStatus" Id="{3a75a7ab-dab2-4f14-a4cf-7bc1351f901a}">
      <Declaration><![CDATA[METHOD getStatus : BOOL
VAR_IN_OUT
	
	r_cartStatus :ST_CartStatus;	

	// cart joint data
	r_cartJointsData :ST_CartJointData;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[r_cartStatus.m_CartState :=m_cartState;
r_cartStatus.m_asepticDeployCompletedFlag := SlaveArmControl.m_slaveRobot.m_panelMountedFlag[1] AND SlaveArmControl.m_slaveRobot.m_panelMountedFlag[2]
																									AND SlaveArmControl.m_slaveRobot.m_panelMountedFlag[3] AND SlaveArmControl.m_slaveRobot.m_panelMountedFlag[4];

r_cartStatus.m_uiControl := GVL_interactUI.g_uiCtrl;
r_cartStatus.m_cartDumpEnergy := GVL_interactUI.g_dumpEnergyUPS;
r_cartStatus.m_sdrivingLeverSensorManualFlag :=NOT m_slaveCart.m_drivingLeverSensorManual;
//r_cartStatus.m_stabilizerDeployedFlag
r_cartStatus.m_trocarOnFlag := m_slaveCart.m_trocarOnFlag;
r_cartStatus.m_joystickValue := m_slaveCart.m_joystickSignal;
r_cartStatus.m_jntPosReachLimit := m_cartAdjust.jntPosReachLimit;

r_cartJointsData.m_cmdJntPos := m_slaveCart.cmdJntPos;
r_cartJointsData.m_cmdJntVel := m_slaveCart.cmdJntVel;
r_cartJointsData.m_curJntPos := m_slaveCart.curJntPos;
r_cartJointsData.m_curJntTrq := m_slaveCart.curJntCurrent;
r_cartJointsData.m_curJntVel := m_slaveCart.curJntVel;
r_cartJointsData.m_curLinkPos := m_slaveCart.curLinkPos;
r_cartJointsData.m_curMotorPos := m_slaveCart.curMotorPos;]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{dac0d65c-106c-4eed-932d-303e798c1acc}">
      <Declaration><![CDATA[METHOD init : BOOL
VAR_INPUT
END_VAR
VAR
	i:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
m_slaveCart.init();
m_cartState := CartJointState_Init;
m_lastCartState := CartJointState_Init;
m_nextCartState := CartJointState_Init;
m_selfCheckPass := FALSE;

//command init
m_cartCtrlCmds.m_jntEnableFlag := g_zeroVec8i;
m_cartCtrlCmds.m_jntOPMode := g_slaveAllPosMode;
m_cartCtrlCmds.m_cmdJntPos := m_slaveCart.m_curJntPos;
m_cartCtrlCmds.m_cmdJntVel := g_zeroVec8d;
m_cartCtrlCmds.m_cmdJntAcc := g_zeroVec8d;
m_cartCtrlCmds.m_cmdJntTrq := g_zeroVec8d;


// generate controller factory
//m_cartCtrlFactory[CartJointState_Error] := m_cartError;
m_cartCtrlFactory[CartJointState_Init] := m_cartInit;
m_cartCtrlFactory[CartJointState_Ready] := m_cartReady;
m_cartCtrlFactory[CartJointState_InSurgery] := m_cartInSurgery;
m_cartCtrlFactory[CartJointState_Movement] := m_cartMotionCar;
m_cartCtrlFactory[CartJointState_HangAdjust] := m_cartAdjust;
m_cartCtrlFactory[CartJointState_AsepticDeployment] := m_cartAsepticDeploy;
m_cartCtrlFactory[CartJointState_RotaOverhang] := m_cartRotaOverhang;
m_cartCtrlFactory[CartJointState_SlowStop] := m_cartSlowStop;

// assign controller
m_cartCtrl:=m_cartCtrlFactory[m_cartState];
m_cartCtrl.Init(m_slaveCart,m_cartCtrlCmds);

]]></ST>
      </Implementation>
    </Method>
    <Method Name="laserIO" Id="{4619ebd3-1444-4ef9-b949-07f0643ac6ed}">
      <Declaration><![CDATA[METHOD laserIO : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//Horizontal laser IO output ,when adjusting the trolley or moving the trolley
IF (m_slaveCart.curJntPos[5] * 1000 + 1850) > 1950 AND  (m_cartState = CartJointState_Movement OR m_cartState = CartJointState_HangAdjust) THEN
	m_openHorizonLaser :=  1;
ELSE
	m_openHorizonLaser :=  0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="run" Id="{a2c569bc-04e6-4881-bf0d-89b31bc10fd5}">
      <Declaration><![CDATA[METHOD PUBLIC run : BOOL
VAR_IN_OUT CONSTANT
	i_cartDataPool: ST_CartInputDataPool;
END_VAR
VAR
	i:INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// state machine transition
stateMachine(i_cartDataPool);	

//update ui data
m_slaveCart.ProcessingUIData(i_cartDataPool.m_UIData);

//update cart joint status
m_slaveCart.updateStatus();


// null ptr check
IF 0 = m_cartCtrl THEN
	RETURN;
END_IF

// run controller
m_cartCtrl.run(m_slaveCart,m_cartCtrlCmds);


m_slaveCart.updateCmds(m_cartCtrlCmds);]]></ST>
      </Implementation>
    </Method>
    <Method Name="stateMachine" Id="{b5b8be07-918e-41ec-9d55-8af52c43f215}">
      <Declaration><![CDATA[METHOD PROTECTED stateMachine : BOOL
VAR_IN_OUT CONSTANT
	i_cartDataPool: ST_CartInputDataPool;
END_VAR
VAR
	i,j:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
m_hangAdjustAllowed := m_slaveCart.m_trocarOnFlag=0 AND ( i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_joystickEnable OR i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_cameraJoystickEnable);
m_asepticDeploymentAllowed := m_slaveCart.m_trocarOnFlag=0 AND ((i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_dockingEnable AND m_slaveCart.cartDockingState=0) 
												OR (i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_drapingEnable AND m_slaveCart.cartDrapingState=0)) AND NOT ( i_cartDataPool.m_safetyData.m_cartAdjustErr OR i_cartDataPool.m_safetyData.m_cartStandColumnErr) ;
m_cartMoveAllowed := m_slaveCart.m_trocarOnFlag=0 AND  m_carHandChassisDriveUnlock[1] AND m_carHandChassisDriveUnlock[2] AND NOT i_cartDataPool.m_safetyData.m_cartWheelErr;
m_rotaOverhangAllowed := m_slaveCart.m_trocarOnFlag=0 AND m_slaveCart.m_rotaOverhangOnFlag > 0 AND NOT i_cartDataPool.m_safetyData.m_cartOverhangErr;

// state machine transit
CASE m_cartState OF
	//cart joint error
	CartJointState_Error:
		//IF FALSE = i_cartDataPool.m_safetyData.m_slaveErrFlag THEN
		//	// to standby
		//	IF m_selfCheckPass THEN
		//		m_nextCartState :=CartJointState_Standby;
		//	ELSE
		//		m_nextCartState :=CartJointState_Init;
		//	END_IF
		//END_IF

	CartJointState_Init:
		IF m_cartCtrl.isFinished THEN
			m_nextCartState :=CartJointState_Ready;
		END_IF
		
		
	CartJointState_Ready:
		IF m_cartCtrl.isFinished  THEN
			m_nextCartState := CartJointState_InSurgery;
			
		ELSIF m_hangAdjustAllowed THEN
			m_nextCartState := CartJointState_HangAdjust;
			
		ELSIF m_asepticDeploymentAllowed THEN
			m_nextCartState := CartJointState_AsepticDeployment;
			
		ELSIF m_cartMoveAllowed THEN
			m_nextCartState := CartJointState_Movement;
			
		ELSIF m_rotaOverhangAllowed THEN
			m_nextCartState := CartJointState_RotaOverhang;
		END_IF
		
	
	CartJointState_InSurgery:
		IF m_cartCtrl.isFinished  THEN
			m_nextCartState :=CartJointState_Ready;
		END_IF
		
		
	CartJointState_Movement:
		IF m_slaveCart.m_trocarOnFlag<>0 OR (NOT m_carHandChassisDriveUnlock[1] AND NOT m_carHandChassisDriveUnlock[2])  THEN
			m_nextCartState :=CartJointState_Ready;
		ELSIF i_cartDataPool.m_safetyData.m_cartWheelErr THEN
			m_nextCartState :=CartJointState_Ready;
		END_IF
		
		
	CartJointState_HangAdjust:
		IF  m_slaveCart.m_trocarOnFlag<>0 OR (NOT i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_joystickEnable AND NOT i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_cameraJoystickEnable ) THEN
			m_nextCartState :=CartJointState_SlowStop;
		END_IF
		
		
	CartJointState_AsepticDeployment:
		IF m_cartCtrl.isFinished  THEN
			IF i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_dockingEnable THEN
				m_slaveCart.cartDockingState := 1;
			ELSIF i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_drapingEnable THEN
				m_slaveCart.cartDrapingState := 1;
			END_IF
			m_nextCartState :=CartJointState_SlowStop;
		ELSIF i_cartDataPool.m_safetyData.m_cartAdjustErr OR i_cartDataPool.m_safetyData.m_cartStandColumnErr THEN
			m_nextCartState :=CartJointState_Ready;
		ELSIF m_slaveCart.m_trocarOnFlag<>0 OR (NOT i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_dockingEnable AND NOT i_cartDataPool.m_UIData.m_ctrlEnableFromUI.m_drapingEnable) THEN
			m_nextCartState :=CartJointState_SlowStop;
		END_IF
		
		
	CartJointState_RotaOverhang:
		IF m_slaveCart.m_rotaOverhangOnFlag = 0 OR  m_slaveCart.m_trocarOnFlag<>0  THEN
			m_nextCartState :=CartJointState_SlowStop;
		ELSIF i_cartDataPool.m_safetyData.m_cartOverhangErr THEN
			m_nextCartState :=CartJointState_Ready;
		END_IF
		
		
	CartJointState_SlowStop:
		IF m_cartCtrl.isFinished  THEN
			m_nextCartState :=CartJointState_Ready;
		END_IF
END_CASE

// Controller transit
IF m_nextCartState<> m_cartState THEN
	//reset current controller
	m_cartCtrl.reset();
	
	// transit to new controller
	m_lastCartState:=m_cartState;
	m_cartState:=m_nextCartState;
	m_cartCtrl:=m_cartCtrlFactory[m_cartState];
	
	//init next controller
	m_cartCtrl.Init(m_slaveCart, m_cartCtrlCmds);
	m_slaveCart.updateCmds(m_cartCtrlCmds);
END_IF

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CartRobot">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartRobot.getStatus">
      <LineId Id="57" Count="17" />
      <LineId Id="31" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartRobot.init">
      <LineId Id="121" Count="0" />
      <LineId Id="85" Count="16" />
      <LineId Id="113" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="118" Count="2" />
      <LineId Id="122" Count="1" />
      <LineId Id="102" Count="3" />
      <LineId Id="74" Count="0" />
      <LineId Id="57" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartRobot.laserIO">
      <LineId Id="6" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartRobot.run">
      <LineId Id="37" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="42" Count="6" />
      <LineId Id="50" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartRobot.stateMachine">
      <LineId Id="174" Count="1" />
      <LineId Id="177" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="30" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="35" Count="4" />
      <LineId Id="61" Count="0" />
      <LineId Id="57" Count="2" />
      <LineId Id="133" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="134" Count="0" />
      <LineId Id="119" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="136" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="64" Count="2" />
      <LineId Id="63" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="100" Count="1" />
      <LineId Id="165" Count="1" />
      <LineId Id="99" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="105" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="153" Count="1" />
      <LineId Id="156" Count="1" />
      <LineId Id="155" Count="0" />
      <LineId Id="169" Count="1" />
      <LineId Id="115" Count="0" />
      <LineId Id="151" Count="1" />
      <LineId Id="112" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="129" Count="2" />
      <LineId Id="171" Count="1" />
      <LineId Id="128" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="141" Count="1" />
      <LineId Id="140" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="71" Count="1" />
      <LineId Id="87" Count="3" />
      <LineId Id="92" Count="1" />
      <LineId Id="91" Count="0" />
      <LineId Id="94" Count="2" />
      <LineId Id="73" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>