<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SetupCtrlGraCali" Id="{918257b4-79e0-4cbe-9388-5407668bd820}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: setup arm gravity calibration
// For trajectory synchronizaiton, the planner generate a trajecotry for setup joint3/5 and slave joint 1-3, but only former used here 
FUNCTION_BLOCK PUBLIC FB_SetupCtrlGraCali EXTENDS FB_SetupArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
// cali trajectory
	m_caliMotionSegs :INT :=3;
	m_graCaliTraj:ARRAY [1..3, 1..5] OF LREAL:=
		[0,	0,	0.1,	0,	pi/2,
		 0,	0,	0.2,	0,	pi/2+pi/4,
		 0,	0,	0.1,	0,	pi/2-pi/4];
		 
	m_caliMaxjntVel:Vec5d:=[5(0.02)];
	m_caliMaxjntAcc:Vec5d:=[5(0.5)];
	m_caliMaxjntJerk:Vec5d:=[5(2.0)];
	
	m_caliTrajIdx: INT := 1;
	m_caliPlanner: ARRAY[1..3] OF FB_setupTrajMoveJ;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{a63b9a9d-25a2-41d4-8171-8d1a059bf096}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR


VAR 
	i :INT;
	curJntVel :Vec5d;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// check if planner is ready
IF m_caliPlanner[m_caliTrajIdx].isGene = FALSE THEN
	calcCmdJntPos:=FALSE;
	RETURN;
END_IF

// traj plan
calcCmdJntPos :=m_caliPlanner[m_caliTrajIdx].evaluate(m_timePeriod, jntPos=> m_cmdJntPos, jntVel=>m_cmdJntVel, jntAcc=> m_cmdJntAcc);

// check if to transit to next segment
curJntVel :=i_setupArm.curJntVel;
IF(m_timePeriod > m_caliPlanner[m_caliTrajIdx].duration  AND norm(curJntVel)<5*GVL_SlaveControlParameters.g_jntStaticVelThres) THEN
	m_caliTrajIdx:=m_caliTrajIdx+1;
	m_timePeriod:=0;
END_IF

// check if to terminated
IF(m_caliTrajIdx > m_caliMotionSegs) THEN
	m_isFinished:=TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{bae0ef4c-6ba5-4959-9e4d-ec4abb1bbb84}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR_IN_OUT 
	r_setupArmCtrlCmd :ST_SetupArmCtrlCmds;
END_VAR

VAR
	i,j :INT;
	startJntPos,endJntPos :Vec5d;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Init(i_setupArm,r_setupArmCtrlCmd);
m_caliTrajIdx :=1;

// traj plan
// fisrt segment
startJntPos:=i_setupArm.curJntPos;
FOR j:=1 TO g_setupJntNum DO 
endJntPos[j]:=m_graCaliTraj[1,j];
END_FOR
m_caliPlanner[1].init(startJntPos,endJntPos,m_caliMaxjntVel, m_caliMaxJntAcc, m_caliMaxJntJerk);

// other segments
FOR i:=2 TO m_caliMotionSegs DO 
	FOR j:=1 TO g_setupJntNum DO 
		startJntPos[j]:=m_graCaliTraj[i-1,j];
		endJntPos[j]:=m_graCaliTraj[i,j];
	END_FOR
	m_caliPlanner[i].init(startJntPos,endJntPos,m_caliMaxjntVel, m_caliMaxJntAcc, m_caliMaxJntJerk);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SetupCtrlGraCali">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlGraCali.calcCmdJntPos">
      <LineId Id="114" Count="18" />
      <LineId Id="98" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlGraCali.init">
      <LineId Id="57" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="131" Count="1" />
      <LineId Id="128" Count="0" />
      <LineId Id="126" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>