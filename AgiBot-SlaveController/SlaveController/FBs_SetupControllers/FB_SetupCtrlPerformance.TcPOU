<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SetupCtrlPerformance" Id="{f59e733c-ce38-42b0-ae1d-fd27aab430d8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SetupCtrlPerformance EXTENDS FB_SetupArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR CONSTANT
	//max number of data recording points
	m_dataSum:INT:=8000;
END_VAR

VAR
	//test step
	m_testStep:INT:=-1;
	
	//Extreme joint position
	m_minJntPos: ARRAY[1..g_setupJntNum] OF LREAL;
	m_maxJntPos: ARRAY[1..g_setupJntNum] OF LREAL;
	
	//home position
	m_homeJntPos:ARRAY[1..g_setupJntNum] OF LREAL;
	
	//arm parameters
	m_armId:INT;
	
	//index
	i,j,id,idx:INT;
	
	//trajectory planner
	m_caliTrajIdx: INT := 1;
	m_jntIdx:INT:=1;
	m_caliMotionSegs :INT :=4;
	m_caliPlanner: ARRAY[3..5,1..4] OF FB_setupTrajMoveJ;
	
	//trajectory velocity/acceleration/jerk
	m_caliMaxjntVel:Vec5d:=[2(1),0.01, 2(2.5*g_deg2Rad)];
	m_caliMaxjntAcc:Vec5d:=[2(1),0.5,2(0.5)];
	m_caliMaxjntJerk:Vec5d:=[2(1),1.0,2(2.0)];
		
	//sampling interval
	m_samplingInterval:INT:=80;
	
	//Number of data records
	m_dataRecordNum_2,m_dataRecordNum_3:ARRAY[1..g_setupJntNum] OF INT;
		
	//The current values of the second and third trajectories
	m_jntCurrentId2:ARRAY[1..m_dataSum,1..g_setupJntNum] OF LREAL;
	m_jntCurrentId3:ARRAY[1..m_dataSum,1..g_setupJntNum] OF LREAL;
	
	//friction record value
	m_CoulombFriction,m_ViscousFriction:ARRAY[1..m_dataSum,1..g_setupJntNum] OF LREAL;
	
	//friction summation
	m_CoulombFrictionSum,m_ViscousFrictionSum:ARRAY[1..g_setupJntNum] OF LREAL;
	
	//friction averange
	m_CoulombFrictionAve,m_ViscousFrictionAve:ARRAY[1..g_setupJntNum] OF LREAL;
	
	//friction maxmum value
	m_CoulombFrictionMax,m_ViscousFrictionMax:ARRAY[1..g_setupJntNum] OF LREAL;
	
	initJntPos,startJntPos,endJntPos :Vec5d;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{82d6dab3-ac1c-441a-bd60-3d7785cbdc35}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CASE m_testStep OF 
	0: //test the motion range/joint friction/joint gap
		IF m_caliPlanner[m_jntIdx,m_caliTrajIdx].isGene = FALSE THEN
			calcCmdJntPos:=FALSE;
			RETURN;
		END_IF
		
		// traj plan
		calcCmdJntPos :=m_caliPlanner[m_jntIdx,m_caliTrajIdx].evaluate(m_timePeriod, jntPos=> m_cmdJntPos, jntVel=>m_cmdJntVel, jntAcc=> m_cmdJntAcc);
		
		// check if to transit to next segment		
		IF(m_timePeriod > m_caliPlanner[m_jntIdx,m_caliTrajIdx].duration) THEN
			m_caliTrajIdx:=m_caliTrajIdx+1;
			m_timePeriod:=0;
			idx:=0;
			id:=0;
			IF (m_caliTrajIdx>m_caliMotionSegs) THEN
				m_jntIdx:=m_jntIdx+1;
				m_caliTrajIdx:=1;				
			END_IF			
		END_IF
		
		//If all joints have been tested, enter the data processing flow
		IF (m_jntIdx>5) THEN
			m_testStep:=10;
		END_IF
		
		//Record the current value during the testing process
		IF (m_caliTrajIdx=2) THEN
			idx:=idx+1;
			IF (idx>=m_samplingInterval) THEN
				idx:=0;
				id:=id+1;
				m_dataRecordNum_2[m_jntIdx]:=id;
				m_jntCurrentId2[id,m_jntIdx]:=i_setupArm.filtJntCurrent[m_jntIdx]*GVL_SetupMotorParameters.g_motorDir[m_jntIdx];
			END_IF			
		ELSIF (m_caliTrajIdx=3) THEN
			idx:=idx+1;
			IF (idx>=m_samplingInterval) THEN
				idx:=0;
				id:=id+1;
				m_dataRecordNum_3[m_jntIdx]:=id;
				m_jntCurrentId3[id,m_jntIdx]:=i_setupArm.filtJntCurrent[m_jntIdx]*GVL_SetupMotorParameters.g_motorDir[m_jntIdx];
			END_IF			
		END_IF
		
		
	10: //Process the data from the above steps				
		FOR j:=3 TO 5 BY 1 DO
			id:=0;
			FOR i:=1 TO m_dataRecordNum_2[j] BY 1 DO 
				idx:=m_dataRecordNum_3[j]-i+1;
				IF (idx>0) THEN
					id:=id+1; //Number of groups for recording data
					m_CoulombFriction[i,j]:=(m_jntCurrentId2[i,j]-m_jntCurrentId3[idx,j])/2;
					m_ViscousFriction[i,j]:=(m_jntCurrentId2[i,j]+m_jntCurrentId3[idx,j])/2;
					
					m_CoulombFrictionSum[j]:=m_CoulombFrictionSum[j]+m_CoulombFriction[i,j];
					m_ViscousFrictionSum[j]:=m_ViscousFrictionSum[j]+m_ViscousFriction[i,j];
					
					IF (m_CoulombFriction[i,j]>m_CoulombFrictionMax[j]) THEN
						m_CoulombFrictionMax[j]:=m_CoulombFriction[i,j];
					END_IF
					
					IF (m_ViscousFriction[i,j]>m_ViscousFrictionMax[j]) THEN
						m_ViscousFrictionMax[j]:=m_ViscousFriction[i,j];
					END_IF				
				END_IF				
			END_FOR			
			//Calculate the mean of frictional force
			m_CoulombFrictionAve[j]:=m_CoulombFrictionSum[j]/id;
			m_ViscousFrictionAve[j]:=m_ViscousFrictionSum[j]/id;			
		END_FOR
		
		m_testStep:=-1;
		m_isFinished:=TRUE;
		
		
	20: //
		
		
	-1: //
END_CASE

]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{10a0ab40-c1f4-4e39-ada0-9124809de58e}">
      <Declaration><![CDATA[// override this function in each exact controller
// NOTICE: set joint control mode here, and do some initialization if needed
METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR_IN_OUT 
	r_setupArmCtrlCmd :ST_SetupArmCtrlCmds;
END_VAR
VAR
	//joint position variables
	//initJntPos,startJntPos,endJntPos :Vec5d;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Init(i_setupArm,r_setupArmCtrlCmd);
m_jntEnableFlag:=g_onesVec5i; m_jntEnableFlag[1]:=0; m_jntEnableFlag[2]:=0;
m_jntOPMode:= g_setupAllPosMode;


//arm id and joint position initial
m_armId:=i_setupArm.armIdx;
initJntPos:=i_setupArm.curJntPos;
startJntPos:=initJntPos;
endJntPos:=initJntPos;


//Assignment of joint position limit values and home position
FOR j:=1 TO g_setupJntNum BY 1 DO
	m_minJntPos[j]:=GVL_SetupMotorParameters.g_minJntPos[m_armId,j];
	m_maxJntPos[j]:=GVL_SetupMotorParameters.g_maxJntPos[m_armId,j];
	m_homeJntPos[j]:=(m_minJntPos[j]+m_maxJntPos[j])/2;
END_FOR


//step/joint id/ trajectory id
m_testStep:=0;
m_caliTrajIdx :=1;
m_jntIdx:=3;


//Trajectory generator initialization
FOR j:=3 TO 5 BY 1 DO
	FOR id:=1 TO 4 BY 1 DO
		startJntPos:=endJntPos;
		endJntPos:=m_homeJntPos;
		
		IF (id=1) THEN
			endJntPos[j]:=m_minJntPos[j]; //minimum
		ELSIF (id=2) THEN
			endJntPos[j]:=m_maxJntPos[j]; //maximum
		ELSIF (id=3) THEN
			endJntPos[j]:=m_minJntPos[j]; //minimum
		ELSIF (id=4) THEN
			endJntPos[j]:=m_homeJntPos[j]; //home
		END_IF		
		m_caliPlanner[j,id].init(startJntPos,endJntPos,m_caliMaxjntVel, m_caliMaxJntAcc, m_caliMaxJntJerk);
	END_FOR
END_FOR


//Initialization of calculation results
FOR j:=1 TO g_setupJntNum BY 1 DO
	m_CoulombFrictionSum[j]:=0; 	m_CoulombFrictionMax[j]:=0; 	m_CoulombFrictionAve[j]:=0;	
	m_ViscousFrictionSum[j]:=0;	 m_ViscousFrictionMax[j]:=0;	 m_ViscousFrictionAve[j]:=0;
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SetupCtrlPerformance">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlPerformance.calcCmdJntPos">
      <LineId Id="8" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="29" Count="2" />
      <LineId Id="20" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="38" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="40" Count="3" />
      <LineId Id="66" Count="1" />
      <LineId Id="44" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="37" Count="0" />
      <LineId Id="48" Count="2" />
      <LineId Id="55" Count="0" />
      <LineId Id="61" Count="1" />
      <LineId Id="64" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="69" Count="5" />
      <LineId Id="59" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="100" Count="11" />
      <LineId Id="95" Count="1" />
      <LineId Id="92" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="118" Count="1" />
      <LineId Id="86" Count="0" />
      <LineId Id="83" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlPerformance.init">
      <LineId Id="11" Count="0" />
      <LineId Id="62" Count="2" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="24" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="15" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="46" Count="5" />
      <LineId Id="45" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="67" Count="1" />
      <LineId Id="70" Count="2" />
      <LineId Id="69" Count="0" />
      <LineId Id="32" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>